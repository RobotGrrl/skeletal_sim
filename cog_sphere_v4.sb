{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "0.0",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.0",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1.04",
                    "name": "r",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('-r++qXqYqZf1.04',float('-1.040000'),float('-1.040000'),float('-1.040000'),float('1.040000'),float('1.040000'),float('1.040000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                }
            ],
            "inspector": [
                394.77917009434316,
                810.24421246648899
            ],
            "name": "s0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Sphere (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.sphere(x, y, z, r))",
                "",
                "# UI",
                "#sb.ui.wireframe([",
                "#    (math.cos(i/36. * 2*math.pi) * r + x,",
                "#     math.sin(i/36. * 2*math.pi) * r + y, z)",
                "#    for i in range(36)], close=True)",
                "#sb.ui.wireframe([(x,y,z-r), (x,y,z+r)])",
                "",
                "#sb.ui.point(x, y, z)",
                "#sb.ui.point(x, y, z + r, drag=(None, None, r))",
                "#sb.ui.point(x, y, z - r, drag=(None, None, r))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "180",
                    "name": "theta",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "60",
                    "name": "phi",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.29",
                    "name": "z0",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "4",
                    "name": "z1",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "0.37",
                    "name": "r",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "1.31",
                    "name": "width",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "3.11",
                    "name": "height",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "90",
                    "name": "a",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4',float('-0.655000'),float('-0.655000'),float('0.000000'),float('0.655000'),float('0.655000'),float('3.110000'))",
                    "name": "s",
                    "type": "_fabtypes.Shape",
                    "uid": 8
                }
            ],
            "inspector": [
                408.23091452707547,
                1109.1737638861284
            ],
            "name": "s1",
            "script": [
                "import fab",
                "",
                "title('problyramid')",
                "",
                "#input('x', float)",
                "#input('y', float)",
                "#input('z', float)",
                "",
                "x = 0",
                "y = 0",
                "z = 0",
                "",
                "input('theta', float)",
                "input('phi', float)",
                "input('z0', float)",
                "input('z1', float)",
                "input('r', float)",
                "input('width', float)",
                "input('height', float)",
                "input('a', float)",
                "",
                "# pyramid",
                "p1 = fab.shapes.pyramid(x - width/2, x + width/2,",
                "                        y - width/2, y + width/2,",
                "                        z, z + height)",
                "",
                "# cone",
                "c1 = fab.shapes.cone(x, y, z0, z1, r)",
                "",
                "# rotate X",
                "c2 = fab.shapes.rotate_x(c1, a, y, z0)",
                "",
                "# polar",
                "c3 = fab.shapes.iterate_polar(c2, x, y, 4)",
                "",
                "# inner pyramid",
                "p2 = fab.shapes.pyramid(x - width/4, x + width/4,",
                "                        y - width/4, y + width/4,",
                "                        z, z + height)",
                "",
                "# shell pyramid",
                "p3 = p1 & ~p2",
                "",
                "# difference",
                "s1 = p3 & ~c3",
                "",
                "# rotate longitude",
                "#s2 = fab.shapes.rotate_x(s1, theta, y, z)",
                "",
                "# rotate latitude",
                "#s3 = fab.shapes.rotate_y(s2, phi, y, z)",
                "",
                "# rotating the shape",
                "#s2 = s1",
                "#for i in range(0,5):",
                "#  deg = i*72",
                "#  s2 |= fab.shapes.rotate_x(s1, deg, y, z)",
                "",
                "# output",
                "output('s', s1)"
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "180",
                    "name": "theta",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "90",
                    "name": "phi",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "\u0011[__2.__3]",
                    "name": "r",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "\u0012-1.04",
                    "name": "x",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "\u00121.2736326711132475e-16",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "\u00126.368163355566237e-17",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                }
            ],
            "inspector": [
                737.91784874562666,
                801.43190458445224
            ],
            "name": "coords",
            "script": [
                "import fab",
                "import math",
                "",
                "title('coordinates (deg)')",
                "input('theta', float)",
                "input('phi', float)",
                "input('r', float)",
                "",
                "x = r * math.cos(math.radians(theta)) * math.sin(math.radians(phi))",
                "y = r * math.sin(math.radians(theta)) * math.sin(math.radians(phi))",
                "z = r * math.cos(math.radians(phi))",
                "",
                "output('x', x)",
                "output('y', y)",
                "output('z', z)",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__7.__8]",
                    "name": "s",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                },
                {
                    "expr": "14",
                    "name": "n",
                    "type": "int",
                    "uid": 3
                },
                {
                    "expr": "\u0012fab.types.Shape('iiiiiiiiiiii-r++qXqYqZf0.01m-Xf0-Yf0-Zf0m+*f1X*f0ZY+*f-0X*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f1Y*f0Z+*f-0Y*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f1X*f0ZY+*f-0X*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f0.866025Z+*f-0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f1X*f0ZY+*f-0X*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f-0.866025Z+*f0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f1Y*f0Z+*f-0Y*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f0.866025Z+*f-0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1ZY+*f-1X*f6.12323e-17Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f-0.866025Z+*f0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16ZY+*f-1.22465e-16X*f-1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f1Y*f0Z+*f-0Y*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16ZY+*f-1.22465e-16X*f-1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f0.866025Z+*f-0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16ZY+*f-1.22465e-16X*f-1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f-0.866025Z+*f0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1ZY+*f1X*f-1.83697e-16Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f1Y*f0Z+*f-0Y*f1Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1ZY+*f1X*f-1.83697e-16Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f0.866025Z+*f-0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1ZY+*f1X*f-1.83697e-16Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m_+*f-0.5Y*f-0.866025Z+*f0.866025Y*f-0.5Zm-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf0m+*f0.707107X*f0.707107Y+*f-0.707107X*f0.707107Y_m-Xf0-Yf0-Zf0aam+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.655X-Xf0.655a-f-0.655Y-Yf0.655a-f0Z-Zf3.11nm+f0/*-Xf0f3.11+*f0-Zf0*f1-f3.11Z+f0/*-Yf0f3.11+*f0-Zf0*f1-f3.11Z_am__f1aa-f-0.3275X-Xf0.3275a-f-0.3275Y-Yf0.3275a-f0Z-Zf3.11niiim-Xf0-Yf0-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f6.12323e-17X*f1Y+*f-1X*f6.12323e-17Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1X*f1.22465e-16Y+*f-1.22465e-16X*f-1Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4m-Xf0-Yf0-Zf0m+*f-1.83697e-16X*f-1Y+*f1X*f-1.83697e-16Y_m-Xf0-Yf0-Zf0m-Xf0-Yf0-Zf1.29m_+*f6.12323e-17Y*f1Z+*f-1Y*f6.12323e-17Zm-Xf0-Yf0-Zf-1.29m+f0/*-Xf0f2.71+*f0-Zf1.29*f1-f4Z+f0/*-Yf0f2.71+*f0-Zf1.29*f1-f4Z_am__f1-r+qXqYf0.37a-f1.29Z-Zf4',float('-3.110000'),float('-3.020838'),float('-3.110000'),float('3.110000'),float('3.156493'),float('3.110000'))",
                    "name": "s_final",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                }
            ],
            "inspector": [
                723.22498205058844,
                1118.1377154400798
            ],
            "name": "s2",
            "script": [
                "import fab",
                "import math",
                "import random",
                "",
                "title('patterner')",
                "",
                "input('s', fab.types.Shape)",
                "input('n', int)",
                "",
                "y = 0",
                "z = 0",
                "",
                "# placeholder shape",
                "s_final = fab.shapes.sphere(0, 0, 0, 0.01)",
                "",
                "theta_vals = [-90, -45, 0, 45, 90]",
                "phi_vals = [0, 90, 180, 270]",
                "",
                "example = False",
                "",
                "if example:",
                "  theta = 45 # 0-360 around the x (red) axis",
                "  phi = 45 # 0-360 around the y (green)",
                "  s1 = fab.shapes.rotate_x(s, theta, y, z)",
                "  s2 = fab.shapes.rotate_y(s1, phi, y, z)",
                "  s3 = fab.shapes.rotate_z(s2, 45, y, z)",
                "  s_final |= s3",
                "",
                "",
                "num = 3",
                "for i in range(0, num):",
                "  theta = i*(360/num) # 0-360 around the x (red) axis",
                "  phi = 0 # 0-360 around the y (green)",
                "",
                "  if i%2 == 0:",
                "    s3 = fab.shapes.rotate_z(s, 45, y, z)",
                "  else:",
                "    s3 = fab.shapes.rotate_z(s, 0, y, z)",
                "  ",
                "  s1 = fab.shapes.rotate_x(s3, theta, y, z)",
                "  s2 = fab.shapes.rotate_y(s1, phi, y, z)",
                "",
                "  s_final |= s2",
                "",
                "",
                "",
                "num = 3",
                "for i in range(0, num):",
                "  theta = i*(360/num) # 0-360 around the x (red) axis",
                "  phi = 90 # 0-360 around the y (green)",
                "",
                "  if i%2 == 0:",
                "    s3 = fab.shapes.rotate_z(s, 45, y, z)",
                "  else:",
                "    s3 = fab.shapes.rotate_z(s, 0, y, z)",
                "  ",
                "  s1 = fab.shapes.rotate_x(s3, theta, y, z)",
                "  s2 = fab.shapes.rotate_y(s1, phi, y, z)",
                "",
                "  s_final |= s2",
                "",
                "",
                "",
                "",
                "num = 3",
                "for i in range(0, num):",
                "  theta = i*(360/num) # 0-360 around the x (red) axis",
                "  phi = 180 # 0-360 around the y (green)",
                "",
                "  if i%2 == 0:",
                "    s3 = fab.shapes.rotate_z(s, 45, y, z)",
                "  else:",
                "    s3 = fab.shapes.rotate_z(s, 0, y, z)",
                "  ",
                "  s1 = fab.shapes.rotate_x(s3, theta, y, z)",
                "  s2 = fab.shapes.rotate_y(s1, phi, y, z)",
                "",
                "  s_final |= s2",
                "",
                "",
                "",
                "",
                "num = 3",
                "for i in range(0, num):",
                "  theta = i*(360/num) # 0-360 around the x (red) axis",
                "  phi = 270 # 0-360 around the y (green)",
                "",
                "  if i%2 == 0:",
                "    s3 = fab.shapes.rotate_z(s, 45, y, z)",
                "  else:",
                "    s3 = fab.shapes.rotate_z(s, 0, y, z)",
                "  ",
                "  s1 = fab.shapes.rotate_x(s3, theta, y, z)",
                "  s2 = fab.shapes.rotate_y(s1, phi, y, z)",
                "",
                "  s_final |= s2",
                "",
                "",
                "",
                "",
                "",
                "output('s_final', s_final)",
                ""
            ],
            "uid": 1
        }
    ],
    "protocol": 6,
    "type": "sb"
}
