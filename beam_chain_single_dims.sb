{
    "nodes": [
        {
            "datums": [
                {
                    "expr": "c1.x",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c1.x + c0.len",
                    "name": "xmax",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c1.y",
                    "name": "y",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c1.z + c1.width/2",
                    "name": "z",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "dim.rad",
                    "name": "r",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('a-r+q-Yf1.13q-Zf1.815f0.36a-f0.82X-Xf3.11',float('0.820000'),float('0.770000'),float('1.455000'),float('3.110000'),float('1.490000'),float('2.175000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                },
                {
                    "expr": "dim.len",
                    "name": "len",
                    "type": "float",
                    "uid": 6
                }
            ],
            "inspector": [
                -120.87104525778511,
                -124.96500161659515
            ],
            "name": "c0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Cylinder (X)')",
                "",
                "input('xmin', float)",
                "input('xmax', float)",
                "input('y', float)",
                "input('z', float)",
                "input('r', float)",
                "",
                "output('shape', fab.shapes.cylinder_x(xmin, xmax, y, z, r))",
                "",
                "input('len', float)",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, y, z), (xmax, y, z)])",
                "sb.ui.wireframe([(xmin, y, z), (xmin, y, z + r)])",
                "",
                "sb.ui.wireframe([",
                "    (xmin, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.wireframe([",
                "    (xmax, math.cos(i/36. * 2*math.pi) * r + y,",
                "     math.sin(i/36. * 2*math.pi) * r + z)",
                "    for i in range(36)], close=True)",
                "",
                "sb.ui.point(xmin, y, z)",
                "sb.ui.point(xmax, y, z)",
                "sb.ui.point(xmin, y, z + r, drag=(None, None, r))",
                ""
            ],
            "uid": 2
        },
        {
            "datums": [
                {
                    "expr": "c1.x",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c1.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "0.0",
                    "name": "_z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dim.theta",
                    "name": "a",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "\u0011[__0.__6,__4.__2]",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 4
                },
                {
                    "expr": "\u0012fab.types.Shape('m-Xf0.82-Yf1.13-Zf0m+*f1X*f0Y+*f-0X*f1Y_m-Xf-0.82-Yf-1.13-Zf0iam__f1aa-f2.655X-Xf3.565a-f0.675Y-Yf1.585a-f0.905Z-Zf1.815aa-r+q-Yf1.13q-Zf1.815f0.36a-f0.82X-Xf3.11nam__f1aa-f0.82X-Xf3.11a-f0.77Y-Yf1.49a-f1.815Z-Zf2.175',float('0.820000'),float('0.675000'),float('0.905000'),float('3.565000'),float('1.585000'),float('2.175000'))",
                    "name": "rotated",
                    "type": "_fabtypes.Shape",
                    "uid": 5
                }
            ],
            "inspector": [
                669.89596403326425,
                57.830538851879382
            ],
            "name": "r0",
            "script": [
                "import fab",
                "import math",
                "",
                "title('Rotate (Z)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('_z', float)",
                "input('a', float)",
                "",
                "input('shape', fab.types.Shape)",
                "output('rotated', fab.shapes.rotate_z(shape, a, x, y))",
                "",
                "# UI",
                "rad = math.radians(a)",
                "sb.ui.wireframe([(x + math.cos(rad), y + math.sin(rad), _z),",
                "                  (x, y, _z),",
                "                  (x + 1, y, _z)], color=sb.color.teal)",
                "",
                "# Draw a semi-circular arc showing the rotation",
                "if int(a) % 360 != 0:",
                "    sb.ui.wireframe([",
                "        (x + math.cos(math.radians(a_)) * 0.3,",
                "         y + math.sin(math.radians(a_)) * 0.3, _z)",
                "        for a_ in range(int(a) % 360)], color=sb.color.teal)",
                "",
                "sb.ui.point(x, y, _z, color=sb.color.teal)",
                "",
                "def drag_pt(this, x, y, z):",
                "    this.a = math.degrees(math.atan2(y - this.y, x - this.x))",
                "sb.ui.point(x + math.cos(rad), y + math.sin(rad), _z,",
                "             color=sb.color.teal, drag=drag_pt, relative=False)",
                "",
                ""
            ],
            "uid": 10
        },
        {
            "datums": [
                {
                    "expr": "dim.xpos",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "dim.ypos",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "dim.zpos",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dim.sq",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "c1.width",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "c1.width",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f0.365X-Xf1.275a-f0.675Y-Yf1.585a-f0.905Z-Zf1.815',float('0.365000'),float('0.675000'),float('0.905000'),float('1.275000'),float('1.585000'),float('1.815000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -418.96617115342156,
                -124.7835502298085
            ],
            "name": "c1",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 3
        },
        {
            "datums": [
                {
                    "expr": "c1.x + c0.len",
                    "name": "x",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c1.y",
                    "name": "y",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c1.z",
                    "name": "z",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c1.width",
                    "name": "width",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "c1.width",
                    "name": "height",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "c1.width",
                    "name": "depth",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f2.655X-Xf3.565a-f0.675Y-Yf1.585a-f0.905Z-Zf1.815',float('2.655000'),float('0.675000'),float('0.905000'),float('3.565000'),float('1.585000'),float('1.815000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                345.89246127389754,
                145.91594614037189
            ],
            "name": "c2",
            "script": [
                "# Neil Gershenfeld 1/24/15",
                "# Matt Keeter 5/22/15",
                "",
                "import fab",
                "import math",
                "",
                "title('Cube (center)')",
                "",
                "input('x', float)",
                "input('y', float)",
                "input('z', float)",
                "input('width', float)",
                "input('height', float)",
                "input('depth', float)",
                "",
                "xmin, xmax = x - width/2, x + width/2",
                "ymin, ymax = y - height/2, y + height/2",
                "zmin, zmax = z - depth/2, z + depth/2",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "",
                "def drag_hwd(this, dx,dy,dz):",
                "   this.width += 2*dx",
                "   this.height += 2*dy",
                "   this.depth += 2*dz",
                "",
                "sb.ui.point(x, y, z)",
                "sb.ui.point(x + width/2.0, y + height/2.0, z + depth/2.0,",
                "             drag=drag_hwd)",
                "",
                ""
            ],
            "uid": 0
        },
        {
            "datums": [
                {
                    "expr": "c0.xmin",
                    "name": "xmin",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "c0.y - c0.r",
                    "name": "ymin",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "c0.z",
                    "name": "zmin",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "c0.xmax",
                    "name": "xmax",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "c0.y + c0.r",
                    "name": "ymax",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "c3.zmin + c0.r",
                    "name": "zmax",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "\u0012fab.types.Shape('am__f1aa-f0.82X-Xf3.11a-f0.77Y-Yf1.49a-f1.815Z-Zf2.175',float('0.820000'),float('0.770000'),float('1.815000'),float('3.110000'),float('1.490000'),float('2.175000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 6
                }
            ],
            "inspector": [
                -122.10625851223904,
                131.59211814307278
            ],
            "name": "c3",
            "script": [
                "import fab",
                "",
                "title('Cube (corner)')",
                "",
                "input('xmin', float)",
                "input('ymin', float)",
                "input('zmin', float)",
                "input('xmax', float)",
                "input('ymax', float)",
                "input('zmax', float)",
                "",
                "output('shape', fab.shapes.cube(xmin, xmax, ymin, ymax, zmin, zmax))",
                "",
                "# UI",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmax, ymin, zmin),",
                "                  (xmax, ymax, zmin), (xmin, ymax, zmin)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmax), (xmax, ymin, zmax),",
                "                  (xmax, ymax, zmax), (xmin, ymax, zmax)], close=True)",
                "sb.ui.wireframe([(xmin, ymin, zmin), (xmin, ymax, zmin),",
                "                  (xmin, ymax, zmax), (xmin, ymin, zmax)], close=True)",
                "sb.ui.wireframe([(xmax, ymin, zmin), (xmax, ymax, zmin),",
                "                  (xmax, ymax, zmax), (xmax, ymin, zmax)], close=True)",
                "sb.ui.point(xmin, ymin, zmin)",
                "sb.ui.point(xmax, ymax, zmax)",
                ""
            ],
            "uid": 1
        },
        {
            "datums": [
                {
                    "expr": "\u0011[__2.__5]",
                    "name": "a",
                    "type": "_fabtypes.Shape",
                    "uid": 0
                },
                {
                    "expr": "\u0011[__1.__6]",
                    "name": "b",
                    "type": "_fabtypes.Shape",
                    "uid": 1
                },
                {
                    "expr": "\u0012fab.types.Shape('aa-r+q-Yf1.13q-Zf1.815f0.36a-f0.82X-Xf3.11nam__f1aa-f0.82X-Xf3.11a-f0.77Y-Yf1.49a-f1.815Z-Zf2.175',float('0.820000'),float('0.770000'),float('1.455000'),float('3.110000'),float('1.490000'),float('2.175000'))",
                    "name": "shape",
                    "type": "_fabtypes.Shape",
                    "uid": 2
                }
            ],
            "inspector": [
                343.91524386013691,
                -15.687362000637826
            ],
            "name": "d0",
            "script": [
                "import fab.types",
                "",
                "title('Difference')",
                "input('a', fab.types.Shape)",
                "input('b', fab.types.Shape)",
                "",
                "output('shape', a & ~b)",
                ""
            ],
            "uid": 4
        },
        {
            "datums": [
                {
                    "expr": "dim.xpos + (dim.sq/2)",
                    "name": "x1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y1",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z1",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "dim.xpos + (dim.sq/2)",
                    "name": "x2",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y2",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "dim.zpos - (dim.sq/2)",
                    "name": "z2",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "dim.xpos - (dim.sq/2)",
                    "name": "x3",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y3",
                    "type": "float",
                    "uid": 10
                },
                {
                    "expr": "dim.zpos - (dim.sq/2)",
                    "name": "z3",
                    "type": "float",
                    "uid": 11
                },
                {
                    "expr": "dim.xpos - (dim.sq/2)",
                    "name": "x4",
                    "type": "float",
                    "uid": 12
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y4",
                    "type": "float",
                    "uid": 13
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z4",
                    "type": "float",
                    "uid": 14
                }
            ],
            "inspector": [
                -470.85270618420657,
                489.69955991099778
            ],
            "name": "p0",
            "script": [
                "import fab",
                "",
                "title('Left cube points')",
                "",
                "input('x1', float)",
                "input('y1', float)",
                "input('z1', float)",
                "",
                "input('x2', float)",
                "input('y2', float)",
                "input('z2', float)",
                "",
                "input('x3', float)",
                "input('y3', float)",
                "input('z3', float)",
                "",
                "input('x4', float)",
                "input('y4', float)",
                "input('z4', float)",
                "",
                "# UI",
                "sb.ui.point(x1, y1, z1, color=(0,255,0))",
                "sb.ui.point(x2, y2, z2, color=(0,255,0))",
                "sb.ui.point(x3, y3, z3, color=(0,255,0))",
                "sb.ui.point(x4, y4, z4, color=(0,255,0))",
                ""
            ],
            "uid": 5
        },
        {
            "datums": [
                {
                    "expr": "0.82",
                    "name": "xpos",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "1.13",
                    "name": "ypos",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "1.36",
                    "name": "zpos",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "0.91",
                    "name": "sq",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "2.29",
                    "name": "len",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "0.36",
                    "name": "rad",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "0",
                    "name": "theta",
                    "type": "float",
                    "uid": 1
                }
            ],
            "inspector": [
                -750.42359483990947,
                -123.78253930204909
            ],
            "name": "dim",
            "script": [
                "import fab",
                "",
                "title('script')",
                "",
                "#output('xpos', 1.0)",
                "#output('ypos', 1.0)",
                "#output('zpos', 1.0)",
                "#output('sq', 0.95)",
                "#output('len', 2.5)",
                "#output('theta', 0.0)",
                "",
                "",
                "input('xpos', float)",
                "input('ypos', float)",
                "input('zpos', float)",
                "input('sq', float)",
                "input('len', float)",
                "input('rad', float)",
                "input('theta', float)",
                ""
            ],
            "uid": 6
        },
        {
            "datums": [
                {
                    "expr": "dim.xpos + dim.len - (dim.sq/2)",
                    "name": "x1",
                    "type": "float",
                    "uid": 3
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y1",
                    "type": "float",
                    "uid": 4
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z1",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "dim.xpos + dim.len + (dim.sq/2)",
                    "name": "x2",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y2",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z2",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "dim.xpos + dim.len + (dim.sq/2)",
                    "name": "x3",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "dim.ypos  - (dim.sq/2)",
                    "name": "y3",
                    "type": "float",
                    "uid": 10
                },
                {
                    "expr": "dim.zpos - (dim.sq/2)",
                    "name": "z3",
                    "type": "float",
                    "uid": 11
                },
                {
                    "expr": "dim.xpos + dim.len - (dim.sq/2)",
                    "name": "x4",
                    "type": "float",
                    "uid": 12
                },
                {
                    "expr": "dim.ypos - (dim.sq/2)",
                    "name": "y4",
                    "type": "float",
                    "uid": 13
                },
                {
                    "expr": "dim.zpos - (dim.sq/2)",
                    "name": "z4",
                    "type": "float",
                    "uid": 14
                }
            ],
            "inspector": [
                61.851267561061988,
                490.19437425259554
            ],
            "name": "p1",
            "script": [
                "import fab",
                "",
                "title('Right cube points')",
                "",
                "input('x1', float)",
                "input('y1', float)",
                "input('z1', float)",
                "",
                "input('x2', float)",
                "input('y2', float)",
                "input('z2', float)",
                "",
                "input('x3', float)",
                "input('y3', float)",
                "input('z3', float)",
                "",
                "input('x4', float)",
                "input('y4', float)",
                "input('z4', float)",
                "",
                "# UI",
                "sb.ui.point(x1, y1, z1, color=(0,255,0))",
                "sb.ui.point(x2, y2, z2, color=(0,255,0))",
                "sb.ui.point(x3, y3, z3, color=(0,255,0))",
                "sb.ui.point(x4, y4, z4, color=(0,255,0))",
                ""
            ],
            "uid": 7
        },
        {
            "datums": [
                {
                    "expr": "dim.xpos + (dim.sq/2)",
                    "name": "x1_front",
                    "type": "float",
                    "uid": 8
                },
                {
                    "expr": "dim.ypos",
                    "name": "y1_front",
                    "type": "float",
                    "uid": 14
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z1_front",
                    "type": "float",
                    "uid": 20
                },
                {
                    "expr": "dim.xpos + (dim.sq/2)",
                    "name": "x2_front",
                    "type": "float",
                    "uid": 0
                },
                {
                    "expr": "dim.ypos",
                    "name": "y2_front",
                    "type": "float",
                    "uid": 1
                },
                {
                    "expr": "dim.zpos + (dim.sq/2) - dim.rad ",
                    "name": "z2_front",
                    "type": "float",
                    "uid": 2
                },
                {
                    "expr": "dim.xpos + (dim.len/2)",
                    "name": "x1_mid",
                    "type": "float",
                    "uid": 5
                },
                {
                    "expr": "dim.ypos",
                    "name": "y1_mid",
                    "type": "float",
                    "uid": 7
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z1_mid",
                    "type": "float",
                    "uid": 9
                },
                {
                    "expr": "dim.xpos + (dim.len/2)",
                    "name": "x2_mid",
                    "type": "float",
                    "uid": 10
                },
                {
                    "expr": "dim.ypos",
                    "name": "y2_mid",
                    "type": "float",
                    "uid": 12
                },
                {
                    "expr": "dim.zpos + (dim.sq/2) - dim.rad",
                    "name": "z2_mid",
                    "type": "float",
                    "uid": 13
                },
                {
                    "expr": "dim.xpos + dim.len - (dim.sq/2)",
                    "name": "x1_back",
                    "type": "float",
                    "uid": 6
                },
                {
                    "expr": "dim.ypos",
                    "name": "y1_back",
                    "type": "float",
                    "uid": 11
                },
                {
                    "expr": "dim.zpos + (dim.sq/2)",
                    "name": "z1_back",
                    "type": "float",
                    "uid": 16
                },
                {
                    "expr": "dim.xpos + dim.len - (dim.sq/2)",
                    "name": "x2_back",
                    "type": "float",
                    "uid": 17
                },
                {
                    "expr": "dim.ypos",
                    "name": "y2_back",
                    "type": "float",
                    "uid": 18
                },
                {
                    "expr": "dim.zpos + (dim.sq/2) - dim.rad",
                    "name": "z2_back",
                    "type": "float",
                    "uid": 19
                }
            ],
            "inspector": [
                -213.24840009858681,
                492.04068074695556
            ],
            "name": "p2",
            "script": [
                "import fab",
                "",
                "title('Cylinder points')",
                "",
                "input('x1_front', float)",
                "input('y1_front', float)",
                "input('z1_front', float)",
                "",
                "input('x2_front', float)",
                "input('y2_front', float)",
                "input('z2_front', float)",
                "",
                "input('x1_mid', float)",
                "input('y1_mid', float)",
                "input('z1_mid', float)",
                "",
                "input('x2_mid', float)",
                "input('y2_mid', float)",
                "input('z2_mid', float)",
                "",
                "input('x1_back', float)",
                "input('y1_back', float)",
                "input('z1_back', float)",
                "",
                "input('x2_back', float)",
                "input('y2_back', float)",
                "input('z2_back', float)",
                "",
                "",
                "",
                "# UI",
                "sb.ui.point(x1_front, y1_front, z1_front, color=(0,255,0))",
                "sb.ui.point(x2_front, y2_front, z2_front, color=(0,255,0))",
                "",
                "sb.ui.point(x1_mid, y1_mid, z1_mid, color=(0,255,0))",
                "sb.ui.point(x2_mid, y2_mid, z2_mid, color=(0,255,0))",
                "",
                "sb.ui.point(x1_back, y1_back, z1_back, color=(0,255,0))",
                "sb.ui.point(x2_back, y2_back, z2_back, color=(0,255,0))",
                "",
                ""
            ],
            "uid": 8
        }
    ],
    "protocol": 6,
    "type": "sb"
}
